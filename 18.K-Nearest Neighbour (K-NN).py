# -*- coding: utf-8 -*-
"""18.K-Nearest Neighbour (K-NN).ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1pGiFkxlghV2_w0brz6iZLzWIt-YdI03r

# **K-Nearest Neighbour**
"""

# importing libraries
from sklearn.datasets import load_breast_cancer
from sklearn.preprocessing import StandardScaler #for scaling the data samples
from sklearn.neighbors import KNeighborsClassifier
from sklearn.metrics import accuracy_score
from sklearn.model_selection import train_test_split
import pandas as pd

# loading dataset
cancer=load_breast_cancer()
df=pd.DataFrame(cancer.data,columns=cancer.feature_names) #to load the actual dataset instead of objects, for nice visualization

x,y=cancer.data,cancer.target

x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.3,random_state=42)

# scaling the data
scaler=StandardScaler()

x_train=scaler.fit_transform(x_train)
x_test=scaler.transform(x_test)

# loading knn,n_neighbors defines the value of k (neighbors), while metric tell which formula we should apply for distance
knn=KNeighborsClassifier(n_neighbors=9,metric='euclidean')

"""### **Model Training & Testing**"""

knn.fit(x_train,y_train)

y_pred=knn.predict(x_test)

print("KNN Accuracy: ",accuracy_score(y_test,y_pred))

"""### **Testing on new data**"""

import numpy as np
new_data=np.array([cancer.data[96]])
new_data=scaler.transform(new_data)
prediction=knn.predict(new_data)
predicted_class=cancer.target_names[prediction][0] #as we gave input as an array, the output received is also a array, so we specified the index to just get the raw output instead of array
print("Predicted Class:",predicted_class)

