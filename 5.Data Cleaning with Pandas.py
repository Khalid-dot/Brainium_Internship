# -*- coding: utf-8 -*-
"""5.Data Cleaning with Pandas.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1hI6z93TXeNdBUbH2eA7dMt4j_n-Jqurb

# **Data Cleaning in Pandas**
Importing library and excel file
"""

import pandas as pd #importing the library

df=pd.read_excel("/content/Customer Call List.xlsx")
df

"""will drop the duplicate data from the data"""

df=df.drop_duplicates()
df

df=df.drop(columns="Not_Useful_Column")
df

"""strip() will remove the mentioned keywords/symbols from the data"""

# df["Last_Name"]=df["Last_Name"].str.lstrip("...")
# df["Last_Name"]=df["Last_Name"].str.rstrip("/")
df["Last_Name"]=df["Last_Name"].str.strip("123._/")
df

"""will give the phone number in a raw phone, will remove any symbols or anything irrevelevent. Regex=True must be done as the sequence provided to the data is in regix format"""

df["Phone_Number"]=df["Phone_Number"].str.replace('[^a-zA-Z0-9]','',regex=True)
df

"""will convert the entire column of phone number into string format to that alterations can be done in later part."""

df["Phone_Number"]=df["Phone_Number"].apply(lambda x: str(x))

"""defined how phone number will be formatted after removing any irrelevent stuff and converting it into the string."""

df["Phone_Number"]=df["Phone_Number"].apply(lambda x: x[0:3] + '-' + x[3:6] + '-' + x[6:10])
df

"""removing (Na--) and (nan--) and the empty spaces of these keywords were also formatted while formatting the phone number

"""

df["Phone_Number"]=df["Phone_Number"].replace('Na--','')
df["Phone_Number"]=df["Phone_Number"].replace('nan--','')
df

""".str.split() → splits each string in the column by a delimiter (, here).<br>
n=2 → split into at most 3 parts (street, state, zip).<br>
expand=True → returns a DataFrame with each split part in a separate column.
"""

df[['Street_Address','State','zip_code']]=df['Address'].str.split(',',n=2, expand=True)
 df

"""Yes and No will be properly formatted into Y and N as previously they were Yes somewhere and Y somewhere"""

df['Paying Customer']=df['Paying Customer'].str.replace('Yes','Y')
df['Paying Customer']=df['Paying Customer'].str.replace('No','N')
df['Do_Not_Contact']=df['Do_Not_Contact'].str.replace('Yes','Y')
df['Do_Not_Contact']=df['Do_Not_Contact'].str.replace('No','N')
df

"""will remove 'N/a' and also other empty spaces



"""

df=df.replace('N/a','')
df=df.fillna('')
df

"""will remove those rows where the customer has asked to No to contact him"""

for i in df.index:
    if df.loc[i, "Do_Not_Contact"] == 'Y':
        df.drop(i, inplace=True)
df

"""removing the rows where phone number is not present

"""

for i in df.index:
    if df.loc[i, "Phone_Number"] == '':
        df.drop(i, inplace=True)
df
# Another way to drop null columns
# df=df.dropna(subset="Phone_Number"),inplace=True

df=df.drop(columns='Address')
df

"""resetting indexes"""

df=df.reset_index(drop=True)
df