# -*- coding: utf-8 -*-
"""16.Ensemble & Bagging.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/12U3hyU7zlLwuYms_8dhKlSVjYvxN5S-C

# **Ensemble Learning & Bagging**
"""

# loading libraries
from sklearn.datasets import load_iris
from sklearn.tree import DecisionTreeClassifier
from sklearn.ensemble import BaggingClassifier #bagging library
from sklearn.metrics import accuracy_score
from sklearn.model_selection import train_test_split

iris=load_iris()

x,y=iris.data,iris.target

x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.2,random_state=42)

# loading DecisionTreeClassifier as a base model
base_tree=DecisionTreeClassifier(random_state=42)

# loading bagging classifier
bgcls=BaggingClassifier(
    estimator=base_tree, #setting DecisionTreeClassifier as a base
    n_estimators=50, #total number of decision trees made
    max_samples=0.8, #ratio of total dataset in each of the decision tree, here its 80%
    random_state=42 #random data will be passed
)

print(x_train.shape, y_train.shape)
print(x_test.shape, y_test.shape)

"""### **Training**"""

bgcls.fit(x_train, y_train)

y_pred=bgcls.predict(x_test)

"""**Accuracy with Bagging**"""

print("Accuracy with Bagging: ",accuracy_score(y_test,y_pred))

base_tree.fit(x_train,y_train)

"""**Accuracy without Bagging**"""

y_pred=base_tree.predict(x_test)
print("Accuracy with without Bagging: ",accuracy_score(y_test,y_pred))